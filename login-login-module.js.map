{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\n\nimport {LoginPage} from './login.page';\nimport {LoadingSpinnerModule} from '../components/loading-spinner/loading-spinner.module';\nimport {AlertModalModule} from '../components/alert-modal/alert-modal.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AlertModalModule,\n        LoadingSpinnerModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [LoginPage]\n})\nexport class LoginPageModule {\n}\n","module.exports = \"<div class=\\\"h-screen w-screen flex items-center justify-center  relative \\\">\\n\\n    <app-loading-spinner *ngIf=\\\"showLoading\\\" [fullScreen]=\\\"true\\\"></app-loading-spinner>\\n    <app-alert-modal [config]=\\\"alertConfig\\\" (result)=\\\"errorAlertCallback()\\\"></app-alert-modal>\\n    \\n    <div class=\\\"w-full flex flex-wrap font-family-karla\\\">\\n\\n        <!-- Login Section -->\\n        <div class=\\\"w-full md:w-1/2 flex flex-col\\\">\\n\\n            <div class=\\\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24\\\">\\n                \\n                <a href=\\\"#\\\" class=\\\"bg-blue-700 text-white font-bold text-xl p-4\\\">OPERADOR MI CARPETA</a>\\n            </div>\\n\\n            <div class=\\\"flex flex-col justify-center md:justify-start my-auto pt-8 md:pt-0 px-8 md:px-24 lg:px-32\\\">\\n                \\n                <p class=\\\"text-center text-3xl\\\">Inicio de sesión</p>\\n                <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\" class=\\\"flex flex-col pt-3 md:pt-8\\\">\\n                    \\n                    <div class=\\\"flex flex-col pt-4\\\">\\n                        <label for=\\\"email\\\" class=\\\"text-lg\\\">Correo electrónico</label>\\n                        <input placeholder=\\\"user@dominio.com\\\" required type=\\\"email\\\" formControlName=\\\"emailAddress\\\"\\n                            data-cy=\\\"'emailAddressInput'\\\"\\n                            class=\\\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\\\">\\n                        <div data-cy=\\\"emailWarning\\\"\\n                            [class.invisible]=\\\"!(!loginForm.controls.emailAddress.valid && loginForm.controls.emailAddress.dirty && loginForm.controls.emailAddress.touched)\\\"\\n                            class=\\\"px-1 text-red-400 pt-0 pb-0 text-sm\\\">\\n                            Por favor introduzca una dirección de correo válida.\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"flex flex-col pt-1\\\">\\n                        <label for=\\\"password\\\" class=\\\"text-lg\\\">Contraseña</label>\\n                        <input placeholder=\\\"Contraseña\\\" required type=\\\"password\\\" formControlName=\\\"password\\\" data-cy=\\\"passwordInput\\\"\\n                            class=\\\"shadow appearance-none border rounded w-full py-3 px-4 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\\\"/>\\n\\n                        <div data-cy=\\\"passwordWarning\\\"\\n                            [class.invisible]=\\\"!(!loginForm.controls.password.valid && loginForm.controls.password.dirty && loginForm.controls.password.touched)\\\"\\n                            class=\\\"px-1 text-red-400 pt-0 pb-0 text-sm\\\">\\n                            Por favor introduzca una contraseña de al menos 8 caracteres.\\n                        </div>\\n                    </div>\\n\\n                    <button class=\\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-10 p-1 mt-6 rounded disabled:bg-blue-500 disabled:opacity-50\\\"\\n                    data-cy=\\\"loginButton\\\"\\n                    type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">INGRESAR\\n                    </button>\\n                    \\n                    <div class=\\\"text-center pt-2 pb-2\\\">\\n                        <p>¿No posee una cuenta? &nbsp;&nbsp;<button class=\\\"bg-transparent text-blue-400 hover:text-blue-700 py-2 mt-6\\\"\\n                        data-cy=\\\"signUpButton\\\" type=\\\"button\\\" [routerLink]=\\\"['/external/sign-up']\\\">REGÍSTRESE AQUÍ.\\n                        </button></p>\\n                    </div>\\n\\n                </form>\\n            </div>\\n\\n        </div>\\n\\n        <!-- Image Section -->\\n        <div class=\\\"w-1/2 shadow-2xl\\\">\\n            <img class=\\\"object-cover w-full h-screen hidden md:block\\\" src=\\\"https://images.unsplash.com/photo-1557487307-8dc8ec048eb8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80\\\">\\n        </div>\\n    </div>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {LoginPayload} from '../../providers/user/user.interface';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '../../state/app.state';\nimport * as UserActions from '../../providers/user/user.actions';\nimport {Actions} from '@ngrx/effects';\nimport {takeUntil} from 'rxjs/operators';\nimport {StoreAction} from '../../state/store-action.interface';\nimport {Subject} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {CustomErrorResponse} from '../../providers/api/api.interface';\nimport {AlertModalConfig} from \"../components/alert-modal/alert-modal.interface\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit, OnDestroy {\n\n    public loginForm: FormGroup;\n    public showLoading: boolean;\n    public alertConfig: AlertModalConfig;\n    private unsubscribe = new Subject();\n\n    constructor(\n        private router: Router,\n        private actions$: Actions,\n        private store: Store<AppState>\n    ) {\n    }\n\n    public ngOnDestroy(): void {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n\n    public ngOnInit(): void {\n\n        this.loginForm = new FormGroup({\n            emailAddress: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', [Validators.required, Validators.minLength(8)])\n        });\n\n        this.actions$.pipe(takeUntil(this.unsubscribe)).subscribe((action: StoreAction) => {\n\n            switch (action.type) {\n\n                case UserActions.LOGIN_SUCCESS:\n                    this.loginSuccess();\n                    break;\n\n                case UserActions.LOGIN_FAILURE:\n                    this.loginFailure(action.payload);\n                    break;\n\n                default:\n                    break;\n\n            }\n\n        });\n    }\n\n    public login(): void {\n        this.showLoading = true;\n        const payload: LoginPayload = {\n            email_address: this.loginForm.controls.emailAddress.value,\n            password: this.loginForm.controls.password.value\n        };\n        this.store.dispatch(new UserActions.LoginRequest(payload));\n    }\n\n    private loginSuccess(): void {\n        this.router.navigate(['/internal/home'], {replaceUrl: true});\n        this.showLoading = false;\n    }\n\n    private loginFailure(response: CustomErrorResponse): void {\n        this.showLoading = false;\n        this.alertConfig = {\n            header: response.error.header,\n            message: response.error.message,\n            confirm: 'OK'\n        };\n    }\n\n    public errorAlertCallback(): void {\n        this.alertConfig = null;\n    }\n\n}\n"],"sourceRoot":""}