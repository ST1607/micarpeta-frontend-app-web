{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/interceptors/auth.interceptor.ts","webpack:///./src/interceptors/interceptors.module.ts","webpack:///./src/interceptors/url.interceptor.ts","webpack:///./src/main.ts","webpack:///./src/mock-backend/mock-backend.database.ts","webpack:///./src/mock-backend/mock-backend.handlers.ts","webpack:///./src/mock-backend/mock-backend.interceptor.ts","webpack:///./src/mock-backend/mock-backend.module.ts","webpack:///./src/providers/api/api.service.ts","webpack:///./src/providers/user/user.actions.ts","webpack:///./src/providers/user/user.effects.ts","webpack:///./src/providers/user/user.module.ts","webpack:///./src/providers/user/user.reducer.ts","webpack:///./src/providers/user/user.service.ts","webpack:///./src/state/meta.reducer.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"../home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"home-home-module\"\n\t],\n\t\"../login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"login-login-module\"\n\t],\n\t\"../settings/settings.module\": [\n\t\t\"./src/app/settings/settings.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"settings-settings-module\"\n\t],\n\t\"../sign-up/sign-up.module\": [\n\t\t\"./src/app/sign-up/sign-up.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"sign-up-sign-up-module\"\n\t],\n\t\"../verify-email/verify-email.module\": [\n\t\t\"./src/app/verify-email/verify-email.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"verify-email-verify-email-module\"\n\t],\n\t\"./external/external.module\": [\n\t\t\"./src/app/external/external.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"external-external-module\"\n\t],\n\t\"./internal/internal.module\": [\n\t\t\"./src/app/internal/internal.module.ts\",\n\t\t\"default~external-external-module~home-home-module~internal-internal-module~login-login-module~settin~d058928e\",\n\t\t\"common\",\n\t\t\"internal-internal-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'external', pathMatch: 'full' },\n  { path: 'internal', loadChildren: './internal/internal.module#InternalPageModule' },\n  { path: 'external', loadChildren: './external/external.module#ExternalPageModule' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\n\nimport {MockBackendModule} from '../mock-backend/mock-backend.module';\nimport {InterceptorModule} from '../interceptors/interceptors.module';\n\nimport {ApiService} from '../providers/api/api.service';\n\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {UserModule} from '../providers/user/user.module';\n\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {metaReducer} from '../state/meta.reducer';\n\n@NgModule({\n    declarations: [AppComponent],\n    entryComponents: [],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        InterceptorModule,\n        MockBackendModule,\n        HttpClientModule,\n        UserModule,\n        StoreModule.forRoot({}, {metaReducers: [metaReducer]}),\n        EffectsModule.forRoot([]),\n    ],\n    providers: [\n        ApiService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { EnvironmentInterface } from './environment.interface';\n\nexport const environment: EnvironmentInterface = {\n    baseUrl: '',\n    production: false,\n    tokenKey: 'AUTH_TOKEN_LOCAL'\n};\n","import {\n    HTTP_INTERCEPTORS,\n    HttpErrorResponse,\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse\n} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\nimport {UserService} from '../providers/user/user.service';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor(\n        private userService: UserService, private router: Router\n    ) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        const token = this.userService.getToken();\n\n        if (token) {\n            request = this.setAuthHeader(request, token);\n        }\n\n        return next.handle(request).pipe(\n            tap(\n                (event: HttpEvent<any>) => {\n                    if (event instanceof HttpResponse) {\n                        // option to modify successful requests here\n                        // console.log('success', event);\n                    }\n                },\n\n                (err: HttpErrorResponse) => {\n                    if (err.status === 401) {\n                        this.userService.removeToken();\n                        this.router.navigate(['external/login']);\n                    }\n                }\n            )\n        );\n\n    }\n\n    setAuthHeader(request: HttpRequest<any>, token: string) {\n        return request.clone({\n            setHeaders: {\n                Authorization: `JWT ${token}`\n            }\n        });\n    }\n\n}\n\nexport let TokenProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n};\n","import { NgModule } from '@angular/core';\n\nimport { TokenProvider } from './auth.interceptor';\nimport { UrlProvider } from './url.interceptor';\n\n\n@NgModule({\n  providers: [\n  UrlProvider,\n  TokenProvider]\n})\nexport class InterceptorModule { }\n","import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n\n@Injectable()\nexport class UrlInterceptor implements HttpInterceptor {\n\n    constructor() {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        request = request.clone({\n            url: environment.baseUrl + request.url\n        });\n\n        return next.handle(request);\n\n    }\n\n}\n\nexport let UrlProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: UrlInterceptor,\n    multi: true\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { MockBackendDatabase } from './mock-backend.interface';\n\nexport let database: MockBackendDatabase = {\n    user: [\n        {\n            id: 123,\n            email_address: 'test@user.com',\n            name: 'password'\n        }\n    ]\n};\n","import {HttpErrorResponse, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {of, throwError} from 'rxjs';\n\nimport {database} from './mock-backend.database';\nimport {MockBackendHandlers} from './mock-backend.interface';\nimport {UserResponse} from '../providers/user/user.interface';\n\nconst getToken = (request: HttpRequest<any>) => request.headers.get('Authorization').replace('Bearer ', '');\n\nexport const handlers: MockBackendHandlers = {\n    '/auth': {\n        POST: (request: HttpRequest<any>) => {\n            const user: UserResponse = database.user.find(u => u.email_address === request.body.email_address);\n            if (!user) {\n                return throwError(new HttpErrorResponse({\n                    error: {\n                        header: 'Error',\n                        message: 'Invalid email address or password.'\n                    },\n                    status: 400\n                }));\n            }\n            return of(new HttpResponse({\n                status: 201,\n                body: {access_token: user.id}\n            }));\n        }\n    },\n    '/user/current-user': {\n        GET: (request: HttpRequest<any>) => {\n            const user: UserResponse = database.user.find(u => u.id.toString() === getToken(request));\n            if (!user) {\n                return throwError(new HttpErrorResponse({status: 401}));\n            }\n\n            return of(new HttpResponse({\n                status: 201,\n                body: user\n            }));\n        }\n    },\n    '/sign-up': {\n        POST: (request: HttpRequest<any>) => {\n            const existing: UserResponse = database.user.find(u => u.email_address === request.body.email_address);\n            if (existing) {\n                return throwError(new HttpErrorResponse({\n                    error: {\n                        header: 'Error',\n                        message: 'A user already exists with this email address!'\n                    },\n                    status: 400\n                }));\n            }\n            const user: UserResponse = {\n                email_address: request.body.email_address,\n                name: request.body.name,\n                id: Math.floor(Math.random() * (1000))\n            };\n            database.user.push(user);\n            return of(new HttpResponse({\n                status: 201,\n                body: null\n            }));\n        }\n    },\n\n};\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {delay, dematerialize, materialize, mergeMap} from 'rxjs/operators';\nimport {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\n\nimport {handlers} from './mock-backend.handlers';\n\n@Injectable()\nexport class MockBackendInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        // wrap in delayed observable to simulate server api call\n        return of(null).pipe(mergeMap(() => {\n            // need to assert type as Observable<HttpEvent<any>> when accessing the functions this way\n            if (handlers.hasOwnProperty(request.url) && handlers[request.url].hasOwnProperty(request.method)) {\n                return handlers[request.url][request.method](request) as Observable<HttpEvent<any>>;\n            }\n\n            return next.handle(request);\n\n        }))\n\n        // call materialize and dematerialize to ensure delay even if an error is thrown\n        .pipe(materialize())\n        .pipe(delay(1000))\n        .pipe(dematerialize());\n    }\n}\n\nexport let MockBackendProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: MockBackendInterceptor,\n    multi: true\n};\n","import { NgModule } from '@angular/core';\n\nimport { MockBackendProvider } from './mock-backend.interceptor';\n\n@NgModule({\n  providers: [\n    MockBackendProvider\n  ]\n})\nexport class MockBackendModule { }\n","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { delay, tap } from 'rxjs/operators';\n\n// type the requestOptions to make sure HttpClient uses the right methods\n// (see https://stackoverflow.com/a/48405006)\ninterface requestOptions {\n  headers?: HttpHeaders | {[header: string]: string | string[]},\n  observe?: 'body',\n  params?: HttpParams | {[param: string]: string | string[]},\n  reportProgress?: boolean,\n  responseType?: 'json',\n  withCredentials?: boolean,\n}\n\n@Injectable()\nexport class ApiService {\n\n  delay: number = 0;\n\n  constructor(public http: HttpClient) {}\n\n  get<T>(endpoint: string, params?: object, reqOpts?: requestOptions): Observable<T> {\n\n    if (!reqOpts) {\n      reqOpts = {\n        params: new HttpParams()\n      };\n    }\n\n    if (params) {\n      reqOpts.params = new HttpParams()\n      for (let k in params) {\n        reqOpts.params = reqOpts.params.set(k, params[k])\n      }\n    }\n\n    return this.http.get<T>(endpoint, reqOpts).pipe(delay(this.delay));\n    \n  }\n\n  post<T>(endpoint: string, body: any, reqOpts?: requestOptions): Observable<T> {\n    return this.http.post<T>(endpoint, body, reqOpts).pipe(delay(this.delay));\n  }\n\n  put<T>(endpoint: string, body: any, reqOpts?: requestOptions): Observable<T> {\n    return this.http.put<T>(endpoint, body, reqOpts).pipe(delay(this.delay));\n  }\n\n  delete<T>(endpoint: string, reqOpts?: requestOptions): Observable<T> {\n    return this.http.delete<T>(endpoint, reqOpts).pipe(delay(this.delay));\n  }\n\n  patch<T>(endpoint: string, body: any, reqOpts?: requestOptions): Observable<T> {\n    return this.http.patch<T>(endpoint, body, reqOpts).pipe(delay(this.delay));\n  }\n\n}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nimport { StoreAction } from '../../state/store-action.interface';\n\nimport { UserResponse, LoginPayload, SignUpPayload } from './user.interface';\n\n// SIGN_UP NEW USERS -----------------------------------\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\n\nexport class SignUpRequest implements StoreAction {\n    readonly type = SIGN_UP_REQUEST;\n\n    constructor(public payload: SignUpPayload) {\n    }\n}\n\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\n\nexport class SignUpSuccess implements StoreAction {\n    readonly type = SIGN_UP_SUCCESS;\n\n    constructor() {\n    }\n}\n\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport class SignUpFailure implements StoreAction {\n    readonly type = SIGN_UP_FAILURE;\n\n    constructor(public payload: HttpErrorResponse) {\n    }\n}\n\n// LOGIN EXISTING USERS --------------------------------\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\n\nexport class LoginRequest implements StoreAction {\n    readonly type = LOGIN_REQUEST;\n\n    constructor(public payload: LoginPayload) {\n    }\n}\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport class LoginSuccess implements StoreAction {\n    readonly type = LOGIN_SUCCESS;\n}\n\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\nexport class LoginFailure implements StoreAction {\n    readonly type = LOGIN_FAILURE;\n\n    constructor(public payload: HttpErrorResponse) {\n    }\n}\n\n// LOGOUT ----------------------------------------------\n\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\n\nexport class LogoutRequest implements StoreAction {\n    readonly type = LOGOUT_REQUEST;\n\n    constructor() {\n    }\n}\n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\nexport class LogoutSuccess implements StoreAction {\n    readonly type = LOGOUT_SUCCESS;\n\n    constructor() {\n    }\n}\n\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\nexport class LogoutFailure implements StoreAction {\n    readonly type = LOGOUT_FAILURE;\n\n    constructor(public payload: HttpErrorResponse) {\n    }\n}\n\n// GET ----------------------------------------------\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\n\nexport class GetUserRequest implements StoreAction {\n    readonly type = GET_USER_REQUEST;\n\n    constructor() {\n    }\n}\n\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\n\nexport class GetUserSuccess implements StoreAction {\n    readonly type = GET_USER_SUCCESS;\n\n    constructor(public payload: UserResponse) {\n    }\n}\n\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\n\nexport class GetUserFailure implements StoreAction {\n    readonly type = GET_USER_FAILURE;\n\n    constructor(public payload: HttpErrorResponse) {\n    }\n}\n\nexport const USE_CACHED_USER = 'USE_CACHED_USER';\n\nexport class UseCachedUser implements StoreAction {\n    readonly type = USE_CACHED_USER;\n\n    constructor() {\n    }\n}\n\nexport type Actions =\n    GetUserRequest\n    | GetUserSuccess\n    | GetUserFailure\n    | SignUpRequest\n    | SignUpSuccess\n    | LoginRequest\n    | LoginSuccess\n    | LogoutRequest\n    | LogoutSuccess\n    | UseCachedUser;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { UserService } from './user.service';\nimport * as UserActions from './user.actions';\nimport { UserResponse, UserToken } from './user.interface';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../state/app.state';\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(public actions$: Actions, public userService: UserService, private store$: Store<AppState>) {\n    }\n\n    @Effect()\n    private register$ = this.actions$.pipe(\n        ofType(UserActions.SIGN_UP_REQUEST),\n\n        switchMap((action: UserActions.SignUpRequest) =>\n            this.userService.signUp(action.payload).pipe(\n                map(() => new UserActions.SignUpSuccess()),\n                // need to catch the error or the stream will end\n                catchError((err: HttpErrorResponse) => of(new UserActions.SignUpFailure(err)))\n            )\n        )\n    );\n\n    @Effect()\n    private login$ = this.actions$.pipe(\n        ofType(UserActions.LOGIN_REQUEST),\n\n        switchMap((action: UserActions.LoginRequest) =>\n            this.userService.login(action.payload).pipe(\n                map((data: UserToken) => {\n                    this.userService.setToken(data.access_token);\n                    return new UserActions.LoginSuccess();\n                }),\n                // need to catch the error or the stream will end\n                catchError((err: HttpErrorResponse) => of(new UserActions.LoginFailure(err)))\n            )\n        )\n    );\n\n    @Effect()\n    private logout$ = this.actions$.pipe(\n        ofType(UserActions.LOGOUT_REQUEST),\n\n        switchMap((action: UserActions.LogoutRequest) =>\n            this.userService.logout().pipe(\n                map(() => {\n                    this.userService.removeToken();\n                    return new UserActions.LogoutSuccess();\n                }),\n                // need to catch the error or the stream will end\n                catchError((err: HttpErrorResponse) => of(new UserActions.LogoutFailure(err)))\n            )\n        )\n    );\n\n    @Effect()\n    private get$ = this.actions$.pipe(\n        ofType(UserActions.GET_USER_REQUEST),\n        withLatestFrom(this.store$.select<UserResponse>('user')),\n        switchMap(([action, user]: [UserActions.GetUserRequest, UserResponse]) => {\n            if (user) {\n                return of(new UserActions.UseCachedUser());\n            } else {\n                return this.userService.getMyself().pipe(\n                    map((data: UserResponse) => new UserActions.GetUserSuccess(data)),\n                    // need to catch the error or the stream will end\n                    catchError((err: HttpErrorResponse) => of(new UserActions.GetUserFailure(err)))\n                );\n            }\n        })\n    );\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects'\n\nimport { UserService } from './user.service';\nimport { userReducer } from './user.reducer';\nimport { UserEffects } from './user.effects';\n\n\n@NgModule({\n    imports: [\n        StoreModule.forFeature('user', userReducer),\n        EffectsModule.forFeature([UserEffects])\n    ],\n    providers: [UserService]\n})\nexport class UserModule { }\n","import * as UserActions from './user.actions';\nimport { UserResponse } from './user.interface';\n\nexport function userReducer(state: UserResponse, action: UserActions.Actions) {\n\n    switch (action.type) {\n\n        case UserActions.GET_USER_SUCCESS:\n            return action.payload;\n\n        default:\n            return state;\n\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { UserResponse, LoginPayload, UserToken, SignUpPayload } from './user.interface';\nimport { ApiService } from '../api/api.service';\nimport { tap, delay } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class UserService {\n\n    constructor(private apiService: ApiService) {\n    }\n\n    public setToken(token: string): void {\n        localStorage.setItem(environment.tokenKey, JSON.stringify(token));\n    }\n\n    public getToken(): string {\n        return JSON.parse(localStorage.getItem(environment.tokenKey));\n    }\n\n    public removeToken(): void {\n        localStorage.removeItem(environment.tokenKey);\n    }\n\n    login(payload: LoginPayload): Observable<UserToken> {\n        return this.apiService.post<UserToken>('/auth', payload).pipe(\n            tap((userToken: UserToken) => this.setToken(userToken.access_token))\n        );\n    }\n\n    getMyself(): Observable<UserResponse> {\n        return this.apiService.get<UserResponse>('/user/current-user');\n    }\n\n    logout(): Observable<void> {\n        return of(this.removeToken()).pipe(delay(500));\n    }\n\n    signUp(payload: SignUpPayload): Observable<UserResponse> {\n        return this.apiService.post<UserResponse>('/sign-up', payload);\n    }\n\n}\n","import * as UserActions from '../providers/user/user.actions';\n\n\n// all actions are passing through the meta reducers before being handed over to the feature reducers\nexport function metaReducer(reducer) {\n\n    return (state, action) => {\n\n        switch (action.type) {\n\n            case UserActions.LOGOUT_SUCCESS:\n                return {};\n\n            default:\n                return reducer(state, action);\n\n        }\n    };\n\n}\n"],"sourceRoot":""}